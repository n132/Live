Gadgets information
============================================================
0x000000000000136f : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop r8 ; jmp 0x11c0
0x0000000000001588 : add al, ch ; ret 0xfffb
0x0000000000001642 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000000133b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; endbr64 ; jmp 0x12c0
0x00000000000012b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000001640 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000000133c : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; jmp 0x12c0
0x00000000000012b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000160d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp 0x11a0
0x0000000000001370 : add byte ptr [rax], al ; add byte ptr [rcx + 0x58], al ; jmp 0x11c0
0x0000000000001036 : add byte ptr [rax], al ; add dl, dh ; jmp 0x1020
0x0000000000001330 : add byte ptr [rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x000000000000133e : add byte ptr [rax], al ; endbr64 ; jmp 0x12c0
0x0000000000001250 : add byte ptr [rax], al ; mov edi, eax ; pop rax ; jmp 0x1571
0x0000000000001371 : add byte ptr [rax], al ; pop r8 ; jmp 0x11c0
0x000000000000160e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp 0x11a0
0x00000000000012b6 : add byte ptr [rax], al ; ret
0x000000000000100d : add byte ptr [rax], al ; test rax, rax ; je 0x1016 ; call rax
0x00000000000012a8 : add byte ptr [rax], al ; test rax, rax ; je 0x12b8 ; jmp rax
0x00000000000012e9 : add byte ptr [rax], al ; test rax, rax ; je 0x12f8 ; jmp rax
0x00000000000012f5 : add byte ptr [rax], r8b ; ret
0x000000000000160f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp 0x11a0
0x0000000000001372 : add byte ptr [rcx + 0x58], al ; jmp 0x11c0
0x0000000000001331 : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000001038 : add dl, dh ; jmp 0x1020
0x0000000000001332 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x0000000000001085 : add eax, 0xf2000000 ; jmp 0x1020
0x00000000000013c2 : add esp, 0x18 ; ret
0x00000000000014f8 : add esp, 0x38 ; ret
0x000000000000156d : add esp, 0x48 ; ret
0x0000000000001017 : add esp, 8 ; ret
0x00000000000013c1 : add rsp, 0x18 ; ret
0x00000000000014f7 : add rsp, 0x38 ; ret
0x000000000000156c : add rsp, 0x48 ; ret
0x0000000000001016 : add rsp, 8 ; ret
0x000000000000132f : and al, byte ptr [rax] ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000000132e : and al, byte ptr gs:[rax] ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000000103e : call qword ptr [rax - 0x5e1f00d]
0x0000000000001014 : call rax
0x0000000000001343 : cli ; jmp 0x12c0
0x0000000000001657 : cli ; sub rsp, 8 ; add rsp, 8 ; ret
0x000000000000145f : dec dword ptr [rax - 0x77] ; out dx, eax ; pop rbp ; jmp 0x1160
0x0000000000001484 : dec ebx ; jne 0x147a ; xor eax, eax ; pop rbx ; ret
0x0000000000001340 : endbr64 ; jmp 0x12c0
0x000000000000136d : idiv byte ptr [rdx + 2] ; pop r8 ; jmp 0x11c0
0x0000000000001012 : je 0x1016 ; call rax
0x00000000000012ad : je 0x12b8 ; jmp rax
0x00000000000012ee : je 0x12f8 ; jmp rax
0x000000000000103a : jmp 0x1020
0x0000000000001464 : jmp 0x1160
0x0000000000001613 : jmp 0x11a0
0x0000000000001375 : jmp 0x11c0
0x0000000000001344 : jmp 0x12c0
0x000000000000124d : jmp 0x1469
0x0000000000001255 : jmp 0x1571
0x0000000000001600 : jmp 0x159a
0x00000000000012af : jmp rax
0x0000000000001248 : jne 0x1252 ; xor eax, eax ; pop rdx ; jmp 0x1469
0x0000000000001486 : jne 0x147a ; xor eax, eax ; pop rbx ; ret
0x0000000000001585 : lock or al, byte ptr [rax] ; add al, ch ; ret 0xfffb
0x00000000000012f1 : loopne 0x1359 ; nop dword ptr [rax + rax] ; ret
0x000000000000132c : mov byte ptr [rip + 0x2265], 1 ; pop rbp ; ret
0x0000000000001252 : mov edi, eax ; pop rax ; jmp 0x1571
0x0000000000001461 : mov edi, ebp ; pop rbp ; jmp 0x1160
0x000000000000136e : mov edx, 2 ; pop r8 ; jmp 0x11c0
0x000000000000160b : mov esi, 9 ; pop rbp ; pop r12 ; jmp 0x11a0
0x0000000000001460 : mov rdi, rbp ; pop rbp ; jmp 0x1160
0x00000000000012f3 : nop dword ptr [rax + rax] ; ret
0x00000000000012b1 : nop dword ptr [rax] ; ret
0x00000000000012f2 : nop word ptr [rax + rax] ; ret
0x0000000000001586 : or al, byte ptr [rax] ; add al, ch ; ret 0xfffb
0x00000000000012ef : or bh, bh ; loopne 0x1359 ; nop dword ptr [rax + rax] ; ret
0x000000000000160c : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp 0x11a0
0x0000000000001105 : or eax, 0xf2000000 ; jmp 0x1020
0x000000000000160a : out dx, eax ; mov esi, 9 ; pop rbp ; pop r12 ; jmp 0x11a0
0x0000000000001462 : out dx, eax ; pop rbp ; jmp 0x1160
0x0000000000001611 : pop r12 ; jmp 0x11a0
0x0000000000001373 : pop r8 ; jmp 0x11c0
0x0000000000001374 : pop rax ; jmp 0x11c0
0x0000000000001254 : pop rax ; jmp 0x1571
0x0000000000001463 : pop rbp ; jmp 0x1160
0x0000000000001610 : pop rbp ; pop r12 ; jmp 0x11a0
0x0000000000001333 : pop rbp ; ret
0x000000000000148a : pop rbx ; ret
0x000000000000124c : pop rdx ; jmp 0x1469
0x0000000000001612 : pop rsp ; jmp 0x11a0
0x000000000000101a : ret
0x0000000000001645 : ret 0xc031
0x000000000000158a : ret 0xfffb
0x0000000000001485 : retf
0x0000000000001011 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000000105b : sar edi, 0xff ; call qword ptr [rax - 0x5e1f00d]
0x0000000000001659 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000001658 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000001010 : test eax, eax ; je 0x1016 ; call rax
0x00000000000012ab : test eax, eax ; je 0x12b8 ; jmp rax
0x00000000000012ec : test eax, eax ; je 0x12f8 ; jmp rax
0x0000000000001246 : test eax, eax ; jne 0x1252 ; xor eax, eax ; pop rdx ; jmp 0x1469
0x000000000000100f : test rax, rax ; je 0x1016 ; call rax
0x00000000000012aa : test rax, rax ; je 0x12b8 ; jmp rax
0x00000000000012eb : test rax, rax ; je 0x12f8 ; jmp rax
0x0000000000001488 : xor eax, eax ; pop rbx ; ret
0x000000000000124a : xor eax, eax ; pop rdx ; jmp 0x1469
0x000000000000136c : xor esi, esi ; mov edx, 2 ; pop r8 ; jmp 0x11c0

Unique gadgets found: 104
